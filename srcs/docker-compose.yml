version: "3.8"

services:
  mariadb:
    image: inception_mariadb
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - inception
    environment:
      # MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      # USER_PASSWORD_FILE: /run/secrets/user_password
      DB_ADMIN_USER: "${DB_ADMIN_USER}"
      # DB_ADMIN_PASSWORD_FILE: /run/secrets/db_admin_password
    secrets:
      - db_root_password
      - user_password
      - db_admin_password
    volumes:
      - mariadb_data:/var/lib/mysql

  wordpress:
    image: inception_wordpress
    depends_on:
      - mariadb
    networks:
      - inception
    environment:
      WORDPRESS_TITLE: "${WORDPRESS_TITLE}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      DB_ADMIN_USER: "${DB_ADMIN_USER}"
      DB_ADMIN_EMAIL: "${DB_ADMIN_EMAIL}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_USER_EMAIL: "${MYSQL_USER_EMAIL}"
      DOMAIN_NAME: "${DOMAIN_NAME}"
    secrets:
      - db_admin_password
      - user_password
    volumes:
      - wordpress_data:/var/www/html

  nginx:
    image: inception_nginx
    ports:
      - "${NGINX_PORT}:443"
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DOMAIN_NAME: "${DOMAIN_NAME}"
    depends_on:
      - wordpress
      - portainer
    networks:
      - inception
    secrets:
      - tls_cert
      - tls_key
    volumes:
      - wordpress_data:/var/www/html   # serve WordPress files
    
  redis:
    image: inception_redis
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - inception
    volumes:
      - redis_data:/data
  
  static_site:
    image: inception_static_site
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - inception
    ports:
      - "8080:80"

  adminer:
    image: inception_adminer
    deploy:
      restart_policy:
        condition: on-failure
    expose:
      - "8080" #Note: we use expose instead of ports, since only Nginx should talk to Adminer internally — we’ll proxy it, not expose it publicly.
    environment:
      - ADMINER_DEFAULT_SERVER=mariadb
    networks:
      - inception

  portainer:
    image: inception_portainer
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock  # allows Portainer to manage Docker
    ports:
      - "9443:9443"  # Optional: HTTPS
    networks:
      - inception


secrets:
  db_root_password:
    file: ../secrets/db_root_password.txt
  user_password:
    file: ../secrets/user_password.txt
  db_admin_password:
    file: ../secrets/db_admin_password.txt
  tls_cert:
    file: ../secrets/tls_cert.pem
  tls_key:
    file: ../secrets/tls_key.pem

volumes:
  mariadb_data:
  wordpress_data:
  redis_data:
  portainer_data:

networks:
  inception:
    driver: overlay
        