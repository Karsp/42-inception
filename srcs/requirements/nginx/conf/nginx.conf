user nginx;
worker_processes auto;


error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log;
    sendfile on;
    keepalive_timeout 65;

    # Redirect HTTP → HTTPS
    server {
        listen 80;
        server_name ${DOMAIN_NAME} localhost;
        return 301 https://$host$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl;
        server_name ${DOMAIN_NAME} localhost;

        ssl_certificate     /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        root /var/www/html;
        index index.php index.html;

        location / {
            try_files $uri $uri/ /index.php?$args;
        }

        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_pass wordpress:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param HTTPS on;
        }

        # Optional: serve static assets efficiently
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|webp)$ {
            expires 30d;
            access_log off;
        }
	# setup adminer
		location /adminer/ {
			proxy_pass http://adminer:8080/;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

	# setup netdata
	# location /netdata/ {
	# 	proxy_pass http://netdata:19999/;
	# 	proxy_set_header Host $host;
	# 	proxy_set_header X-Real-IP $remote_addr;
	# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	# 	proxy_set_header X-Forwarded-Proto $scheme;

	# 	# Optional: remove the /netdata prefix
	# 	rewrite ^/netdata(/.*)$ $1 break;
	# }

	# setup portainer
		# location /portainer/ {
		# 	# Keep trailing slash for frontend
		# 	proxy_pass https://portainer:9443/;
		# 	proxy_ssl_verify off;

		# 	proxy_set_header Host $host;
		# 	proxy_set_header X-Real-IP $remote_addr;
		# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		# 	proxy_set_header X-Forwarded-Proto $scheme;

		# 	# WebSocket support
		# 	proxy_http_version 1.1;
		# 	proxy_set_header Upgrade $http_upgrade;
		# 	proxy_set_header Connection "upgrade";

		# 	# Preserve URLs for frontend
		# 	proxy_redirect off;
		# }

	# location /portainer/ {
	# 	proxy_pass https://portainer:9443/;
	# 	proxy_ssl_verify off;
	# 	proxy_set_header Host $host;
	# 	proxy_set_header X-Real-IP $remote_addr;
	# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	# 	proxy_set_header X-Forwarded-Proto $scheme;

	# 	# Portainer’s frontend requires trailing slash preservation
	# 	proxy_redirect off;
	# 	rewrite ^/portainer$ /portainer/ permanent;
	# }




    }
	server {
    listen 443 ssl;
    server_name portainer.daviles-.42.fr;

    ssl_certificate     /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    location / {
        proxy_pass https://portainer:9443/;
        proxy_ssl_verify off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;
    }
}


}
